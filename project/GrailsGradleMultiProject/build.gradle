buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "https://repo.grails.org/grails/core"
        }
        maven {
            url "http://central.maven.org/maven2/"
        }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}


allprojects {

    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "https://repo.grails.org/grails/core"
        }
        maven {
            url "http://central.maven.org/maven2/"
        }
    }

    apply plugin:"idea"
}

ext {
    starterApplication = ['Starter']
}

subprojects { Project project ->
    boolean isStarterApp = starterApplication.contains(project.name)

    if (isStarterApp){
        apply plugin:"war"
        apply plugin:"org.grails.grails-web"
        apply plugin:"org.grails.grails-gsp"
    }else{
        apply plugin:"org.grails.grails-plugin"
        apply plugin:"org.grails.grails-plugin-publish"
        apply plugin:"org.grails.grails-gsp"
    }

    if (isStarterApp){
        dependencies {
            compile "org.grails.plugins:events"
            compile "org.grails.plugins:hibernate5"
            compile "org.hibernate:hibernate-core:5.1.5.Final"
            profile "org.grails.profiles:web"
            runtime "org.glassfish.web:el-impl:2.1.2-b03"
            runtime "com.h2database:h2"
            runtime "org.apache.tomcat:tomcat-jdbc"
        }
    }else{
        dependencies {
            provided "org.grails:grails-plugin-services"
            provided "org.grails:grails-plugin-domain-class"
            profile "org.grails.profiles:web-plugin"
            testCompile "org.grails:grails-plugin-testing"
        }
    }

    dependencies {
        compile "org.springframework.boot:spring-boot-starter-logging"
        compile "org.springframework.boot:spring-boot-autoconfigure"
        compile "org.springframework.boot:spring-boot-starter-actuator"
        compile "org.springframework.boot:spring-boot-starter-tomcat"
        compile "org.grails:grails-core"
        compile "org.grails:grails-web-boot"
        compile "org.grails:grails-logging"
        compile "org.grails:grails-plugin-rest"
        compile "org.grails:grails-plugin-databinding"
        compile "org.grails:grails-plugin-i18n"
        compile "org.grails:grails-plugin-services"
        compile "org.grails:grails-plugin-url-mappings"
        compile "org.grails:grails-plugin-interceptors"
        compile "org.grails.plugins:cache"
        compile "org.grails.plugins:async"
        compile "org.grails.plugins:scaffolding"
        compile "org.grails.plugins:gsp"
        console "org.grails:grails-console"
        testCompile "org.grails:grails-gorm-testing-support"
        testCompile "org.grails.plugins:geb"
        testCompile "org.grails:grails-web-testing-support"
        testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
        testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    }

    bootRun {
        jvmArgs('-Dspring.output.ansi.enabled=always')
        addResources = true
    }

    if (!isStarterApp){
        bootRepackage.enabled = false
    }
}